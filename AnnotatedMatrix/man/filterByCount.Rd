% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MethodsDocumentation.R
\name{filterByCount}
\alias{filterByCount}
\title{Filter by Count}
\arguments{
\item{MARGIN}{Required, defines the dimension to be filtered. Can
specify rows with '1' or 'row', columns with '2' or 'col'.}

\item{min}{Default NULL, optional minimum count. Will be normalized
with \link{normalizePercent}, which will interpret integers and
numeric values as absolute counts, and numeric strings ending
with '\%' as percentages of the total dimension length.}

\item{max}{Default NULL, optional maximum score, same input
considerations as \code{min}.}

\item{relative}{Default TRUE. If true, then relative values
(percentages) provided for \code{min} and \code{max} will be
computed against the currently populated state of the
matrix. For example, if a matrix has 1000 rows, and the minimum
threshold is 10%, if only 400 rows are currently populated then
the minimum threshold is 40 when \code{relative=TRUE}, but 100
when \code{relative=FALSE}. This setting can dramatically
change the course of recursive filtering, where two or more
filters are repeatedly reapplied until no further changes are
seen. Note that \link{autoFilter} by default will operate
recursively.}

\item{filterEmpty}{Default FALSE. If true, then rows or columns
that are empty after filtering will be removed from the matrix
using \link{removeEmpty}. If no cells were affected by the
\code{filterByCount} call, then \code{removeEmpty} will not be
called. If you wish to assure that empty rows and columns are
removed after this filter, you should call \code{removeEmpty}
explicitly.}

\item{reason}{Default NA. Optional human-readable reason for why
the alteration was made, will be recorded in \link{filterLog}
and used to structure \link{filterSummary}}

\item{help}{Default FALSE. If TRUE, show this help and perform no
other actions.}
}
\value{
Invisibly, an integer vector of newly zeroed counts for
    (cells, rows, cols).
}
\description{
AnnotatedMatrix object method to filter rows and columns by number
of connections
}
\details{
\preformatted{
## Method Usage:
myObject$filterByCount( help=TRUE )

myObject$filterByCount( MARGIN, min=NULL, max=NULL, relative=TRUE,
                        filterEmpty=FALSE, reason=NA )
}

Updates the \link[=matrixUse]{used matrix} to remove rows and
columns when elements in a dimension have too few or too many
connections. Minimum and maximum connection counts can be specified
absolutely, or as a percentage of the length of the dimenstion.

This filter was created initially to support hypergeometric-based
gene enrichment analysis. In that context it can remove ontology
terms that are assigned to "few" (too specific) or "many" (too
generic) genes. It is also be used to remove genes with few
ontology terms, as a mechanism to exclude genes with poor
biological support.
}
\examples{

## Fitler the example matrix to find symbols that have 3 or more genes:
s2e <- AnnotatedMatrix( annotatedMatrixExampleFile() )
s2e$reset()
s2e$filterByCount("row", min=3, filterEmpty=TRUE,
                  reason="Keep only symbols with 3+ genes")
## Use the GMT output as a simple way to summarize the symbols:
message(s2e$as.gmt())
s2e$filterSummary()

}
\seealso{
\link{filterLog}, \link{filterSummary}, \link{autoFilter},
    \link{appliedFilters}
}
