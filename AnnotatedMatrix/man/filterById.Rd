% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MethodsDocumentation.R
\name{filterById}
\alias{filterById}
\title{Filter by ID}
\arguments{
\item{id}{Required, a vector of one or more IDs (names) to match
against.}

\item{MARGIN}{Default \code{NULL}, defines the dimensions to be
filtered. Can specify rows with '1' or 'row', columns with '2'
or 'col'. If NULL, then both rows and columns will be
matched. \strong{BE CAREFUL} - When keep=TRUE, you will almost
always want to set a margin! Otherwise it is unlikely that your
desired IDs are represented on both the rows and columns, and
you will end up with an empty matrix (a warning will be shown
in such cases to remind you that you might want MARGIN to be
defined).}

\item{keep}{Default \code{FALSE}, which will cause matching IDs to
be removed. If TRUE, then non-matching IDs will be removed.}

\item{ignore.case}{Default \code{TRUE}, which ignores the
capitilazation of IDs}

\item{exact}{Default \code{TRUE}, which will consider each value of
\code{id} as an exact match. If FALSE, then the values provided
in id will be treated as regular expressions. A name will match
if \strong{any} of the regular expressions matches it.}

\item{filterEmpty}{Default \code{FALSE}. If true, then rows or
columns that are empty after filtering will be removed from the
matrix using \link{removeEmpty}. If no cells were affected by
the \code{filterByCount} call, then \code{removeEmpty} will not
be called. If you wish to assure that empty rows and columns
are removed after this filter, you should call
\code{removeEmpty} explicitly.}

\item{reason}{Default NA. Optional human-readable reason for why
the alteration was made, will be recorded in \link{filterLog}
and used to structure \link{filterSummary}}

\item{help}{Default FALSE. If TRUE, show this help and perform no
other actions.}
}
\value{
Invisibly, an integer vector of newly zeroed counts for
    (cells, rows, cols).
}
\description{
AnnotatedMatrix object method to filter rows and columns by their names
}
\details{
\preformatted{
## Method Usage:
myObject$filterById( help=TRUE )

myObject$filterById( id, MARGIN=NULL, keep=FALSE,
                     ignore.case=TRUE, filterEmpty=FALSE, reason=NA)
}

Updates the \link[=matrixUse]{used matrix} to remove rows and
columns based on their IDs (names). 

This filter was created initially to support hypergeometric-based
gene enrichment analysis. In that context it can remove ontology
terms that are assigned to "few" (too specific) or "many" (too
generic) genes. It is also be used to remove genes with few
ontology terms, as a mechanism to exclude genes with poor
biological support.
}
\examples{

s2e <- AnnotatedMatrix( annotatedMatrixExampleFile() )
s2e$reset()
# Filter down to just a handful of symbols
s2e$filterById(c("AR","AIRE1","APSI"), MARGIN='row', keep=TRUE)
message(s2e$as.gmt(transpose=TRUE))

s2e$reset()
# Use RegExp pattern to remove genes with LocusLink IDs longer than 3 digits
s2e$filterById(c('^LOC[0-9]{4,}'), exact=FALSE)
message(s2e$as.gmt(transpose=TRUE))
s2e$filterSummary()

s2e$reset()
## Unintended removal of all data can occur when you pass a
## specific keep list and fail to specify the margin. You will be
## warned when this happens, though.
s2e$filterById(c("AR","AIRE1","APSI"), keep=TRUE)

}
\seealso{
\link{filterLog}, \link{filterSummary}, \link{autoFilter},
    \link{appliedFilters}, \link{rNames}, \link{cNames}
}
