% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MethodsDocumentation.R
\name{autoFilter}
\alias{autoFilter}
\title{Automatic Filters}
\arguments{
\item{recursive}{Default TRUE. Because some filters check the
number of populated rows or columns, it is possible that the
application of a latter filter will result in rows or columns
that passed a prior one to now be considered failing. Recursive
will keep reapplying filters into no further changes (based on
zeroed cell count) are observed. If you desire the final matrix
to pass all filters, leave recursive as TRUE.}

\item{verbose}{Default TRUE, which displays a message summarizing
the count of zeroed elements (cells, rows and columns).}

\item{help}{Default FALSE. If TRUE, show this help and perform no
other actions.}
}
\value{
Invisibly, an integer vector of newly zeroed counts for
    (cells, rows, cols).
}
\description{
AnnotatedMatrix object method to apply filters described in parameters
}
\details{
\preformatted{
## Method Usage:
myObject$autoFilter( help=TRUE )

myObject$autoFilter( recursive=TRUE, verbose=TRUE )
}

The matrix will recognize several parameters as defining filter
operations. While these parameters could be set 'manually' in code,
they are of primary utility in allowing annotated matrix files to
"self describe" default reasonable starting filters for the matrix.

While you can run \code{autoFilter()} manually (for example, after
a \code{reset()}, it is by default run automatically on Matrix
load. To \strong{prevent} autofiltering on load, pass
\code{autofilter=FALSE} when calling \code{AnnotatedMatrix()}.

The following parameters are identified as specifying a filter
request:

\itemize{

    \item MinScore    MaxScore
    \item MinRowCount MaxRowCount
    \item MinColCount MaxColCount
    \item KeepRow     TossRow
    \item KeepCol     TossCol
    \item KeepLevel   TossLevel
    \item TossMeta

}

Calling \code{$showParameters( na.rm=FALSE)} will list all standard
parameters and their values; Not all of these will be relevant to
autoFilter, but those that are will indicate as much in the
description.
}
\examples{

## The example matrix has two default filters defined:
s2e <- AnnotatedMatrix( annotatedMatrixExampleFile() )
s2e # Summary of the matrix

## Only one removed any entries, though:
s2e$filterSummary()
## This is because the cells impacted by the second filter (on
## "Description" metadata) are fully contained by those already
## removed by the first (a factor filter removing level "Unknown")

## We can remove all filters:
s2e$reset()
s2e

## ... and then reapply the automatic filters if we wish:
s2e$autoFilter()

## Show the currently set parameters:
s2e$showParameters()

## Show all recognized parameters:
s2e$showParameters( na.rm=FALSE )

}
\seealso{
\link{filterByScore}, \link{filterByFactorLevel},
    \link{filterByMetadata}, \link{filterByCount},
    \link{filterById}, \link{reset}, \link{filterSummary},
    \link{appliedFilters}, \link[ParamSetI]{showParameters}
}
