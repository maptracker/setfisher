% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AnnotatedMatrix.R
\name{extendDataTable}
\alias{extendDataTable}
\title{Extend Data Table}
\usage{
extendDataTable(x, y, key = "id")
}
\arguments{
\item{x}{Required, the 'target' data.table}

\item{y}{Required, the 'source' data.table, which will be added to
or over-write the corresponding rows/columns in x}

\item{key}{Default 'id', the column to merge on}
}
\value{
A new data.table with new rows and columns merged. Will not
    alter input values.
}
\description{
Append both new rows and new columns from one data.table to another
}
\details{
Designed to grow the metadata data.table as both new rows and
columns are added, while keeping both rows and columns
distinct. There may be a more elegant way to do this with native
data.table methods, but I haven't found it, and not for want of
trying.

Bad things can happen with data.tables if the key column is an
integer - when subsetting, these will generally be interpreted as
row numbers, which will oftenot correlate to the rows holding the
anticipated value, and are also fluid depending on the key(s) being
set on the DT (and perhaps on prior operations?) For this reason,
the key should be a column of type character.
}
\examples{

library('data.table')
## Again, the key column should be character mode
dt1 <- data.table(a = c("1","2","3"), b = c("apple","banana", "cherry"),
                  key='a')
dt2 <- data.table(a = c("2","4","5"), b = c("BLUEBERRY","DATE","EGGPLANT"),
                  c = c("beep","ding","eek"), key='a')
extendDataTable(dt1, dt2, key='a')

}
