% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EventLogger.R
\docType{class}
\name{EventLogger-class}
\alias{EventLogger-class}
\alias{EventLogger}
\title{Event Logger}
\description{
Utility ReferenceClass object for messaging and recording of
events. Use \code{$message()} for general logging (stores event and
reports to console), see Methods section for variants.
}
\details{
A $show() method has been set, so simply evaluating an EventLogger
object on the command line will pretty-print the result. The
data.table holding the log information can be directly accessed
in field $log.
}
\section{Fields}{

\describe{
\item{\code{log}}{The data.table holding log messages}

\item{\code{vb}}{Logical flag indicating if verbose messaging should be
active}

\item{\code{EvLogObj}}{An optional external EventLogger object. Used to
centralize log information across multiple inheriting objects in
one place.}
}}

\section{Methods}{

\describe{
\item{\code{actionMessage(msg = "No message provided!", prefix = "[+]", color = "red",
  help = FALSE, ...)}}{Calls message with a '[+]' prefix and red coloring}

\item{\code{dateMessage(msg = "No message provided!", help = FALSE, ...)}}{Calls message() with datestamp=TRUE}

\item{\code{debugMessage(msg = "No message provided!", prefix = "[DEBUG]",
  color = "white", bgcolor = "blue", help = FALSE, ...)}}{Calls message with a '[DEBUG]' prefix and white/blue coloring}

\item{\code{err(msg = "No message provided!", prefix = "[ERROR]", color = "red",
  bgcolor = "yellow", help = FALSE, ...)}}{Calls message with an '[ERROR]' prefix and red/yellow coloring}

\item{\code{fieldDescriptions(help = FALSE)}}{A static list of brief descriptions for each field in this object}

\item{\code{helpSections(help = FALSE)}}{Static list organizing object methods into conceptual sections}

\item{\code{initialize(useColor = TRUE, ...)}}{Create a new RefClassHelper Reference Class object}

\item{\code{logText(width = 0.7 * getOption("width"), relative = TRUE, pad = 11,
  n = 0, help = FALSE)}}{Formats the log as a human readable two-column table}

\item{\code{message(msg = "No message provided!", prefix = NULL, color = NULL,
  bgcolor = NULL, datestamp = FALSE, fatal = FALSE, collapse = " ",
  help = FALSE)}}{Display a formatted message, and store it in the log table}

\item{\code{show(help = FALSE)}}{Pretty-print the object}

\item{\code{showLog(help = FALSE, ...)}}{Pretty-prints the log, including total elapsed time}

\item{\code{tidyTime(x = NULL, pad = 0, help = FALSE)}}{Reports a time interval with unit management and colorization}

\item{\code{verbose(newval = NULL, help = FALSE)}}{Get or set the flag determining if messages are displayed}
}}

\examples{

myEL <- EventLogger()
myEL$message("Did something important")
Sys.sleep(3)
myEL$actionMessage("Something emphatic has happened")
Sys.sleep(1)
myEL$dateMessage("Here's a date stamp")
myEL$debugMessage("Remember to comment this out in production")

# Pretty print the log, including an elapsed time:
myEL
# Expose the underlying data.table:
myEL$log

## Demo with inheritance of the class:
demo("objectInheritance", package="EventLogger", ask=FALSE)


}
