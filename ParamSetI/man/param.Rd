% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MethodsDocumentation.R
\name{param}
\alias{param}
\title{Paramater}
\arguments{
\item{key}{Default NA. The name of the parameter. If NA will simply
return NA. Key names are case insensitive.}

\item{val}{Default NA. Optional new value. If not NA, then the
parameter value will be set, with behavior modified by some of
the flags below}

\item{append}{Default FALSE, which will cause the parameter to be
set to \code{val}. If TRUE, \code{val} will be appended to the
end of the current vector holding the value for \code{key}.}

\item{default}{Default NA. Optional value to return if the value of
\code{key} is 'not defined'; see \link[CatMisc]{is.def} for
values that are considered 'undefined'}

\item{clobber}{Default TRUE, which allows an already-set value to
be replaced with \code{val}. Using FALSE is primarily used for
managing default settings.}

\item{check.class}{Default NULL, which will check the parameter
definitions and use any class found there. If the value is NA
or '', then there will be no class check. Otherwise, is.class()
will be tested with the provided class name against the
provided \code{val} to see if it matches. If not, an error will
be reported and \code{key} will not be set. The value 'percent'
will be interpreted as 'numeric'.}

\item{is.scalar}{Default NULL. If TRUE then only \code{val[1]} will
be taken. If FALSE, then all elements of \code{val} to be
assigned to \code{key}. If NULL, then if val is only a single
element, but matches the pattern '[^]][.+]', then it will be
split as a vector - see \link{selfSplittingString}}

\item{coerce}{Default TRUE, which will attempt to coerce \code{val}
to \code{check.class} in the event that check.class is not NA}

\item{help}{Default FALSE. If TRUE, show this help and perform no
other actions.}
}
\value{
The value of the parameter, or NA if the key does not exist
    or is unset
}
\description{
ParamSetI object method to get/set a parameter
}
\details{
\preformatted{
## Method Usage:
myObject$param( help=TRUE )

myObject$param(key=NA, val=NA, append=FALSE, default=NA, clobber=TRUE, 
               check.class=NULL, is.scalar=NULL, coerce=TRUE )
}

Gets or sets parameters on the object
}
\examples{

## This demo defines a toy object inheriting ParamSetI:
demo("exampleParamSetObject", package="ParamSetI", ask=FALSE)
pse <- ParamSetExample( params=list(inc=10L) )

# Get a parameter
pse$param("inc")
# Set a parameter
pse$param("inc", 33L)

# Setting a parameter to an illegal class is prevented
pse$param("inc", "swamp monster")
# ... unless you take the safety off:
pse$param("inc", "swamp monster", check.class=FALSE)
# ... or specify an allowed class:
pse$param("inc", "swamp monster", check.class="character")

# coercable classes are allowed:
pse$param("inc", 42) # Numeric, not integer
# ... unless you don't allow it
pse$param("inc", 42, coerce=FALSE)

# Multiple values are normally ignored
pse$param("inc", 4:7)
# ... unless you indicate otherwise:
pse$param("inc", 4:7, is.scalar=FALSE)
# ... or you indicate that you want to append new values
pse$param("inc", 8:10, append=TRUE) # but only the first value!
# ... or you indicate *both*:
pse$param("inc", 11:13, is.scalar=FALSE, append=TRUE)
# ... or pass a string recognized by selfSplittingString
pse$param("inc", "[..][2..22..222]")

# clobber can be used to prevent overwriting a previously-set value
pse$param("inc", 1L, clobber=FALSE)

# You can specify a default value if none is already set
pse$param("color")
pse$param("color", default="purple")


}
\seealso{
\link{showParameters}, \link{paramClass}, \link[CatMisc]{is.def}
}
